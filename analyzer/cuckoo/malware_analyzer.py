__author__ = "zqzas"

from core.engine import Analyzer
from core.tags import Tags
from analyzer import BaseAnalyzer
from cuckoo_wrapper import CuckooWrapper
import os

Binary = Tags.Attachment.BINARY


# For tags one may use array as well, both of them accepted.
@Analyzer(tags=Binary)
class MalwareAnalyzer(BaseAnalyzer):
    """ Malware Analyzer Using Cuckoo """

    def __init__(self):
        BaseAnalyzer.__init__(self)
        self.cuckoo = CuckooWrapper()

    def __repr__(self):
        return "MalwareAnalyzer"

    def analyze(self, data):
        """
        Analyze the data
        @param data     : the data object
        @return         : the task id
        """

        def retrievePath(data):
            """ get the path of data """
            stream = data.getStream()
            files = []
            attachments = data.getAttachments()
            for a in attachments:
                filename = a[0]
                filetype = a[1]
                if filetype.endswith('binary'):
                    filename = os.path.join(stream.outputFolder, 'attachments', filename)
                    files.append(filename)

            return files

        path = retrievePath(data)[0]
        # TODO: Check multiple file case!!!
        try:
            taskID = self.cuckoo.analyzeMalware(path, self.conf)
        except:
            #raise proper Exception here
            raise Exception("Malware Analyzer Fails.")

        return taskID




